/*             
 * 			  (                       
 *			 ( )\         (        (   
 *			 )((_)  (    ))\ (    ))\  
 *			((_)_   )\  /((_))\  /((_) 
 *			 | _ ) ((_)(_)) ((_)(_))   
 *			 | _ \/ _ \/ -_)(_-</ -_)  
 *			 |___/\___/\___|/__/\___|
 *       
 *           			;            
 *		      +        ;;;         + 
 *			  +       ;;;;;        + 
 *			  +      ;;;;;;;       + 
 *			  ++    ;;;;;;;;;     ++ 
 *			  +++++;;;;;;;;;;;+++++  
 *			   ++++;;;;;;;;;;;+++++  
 *				++;;;;;;;;;;;;;++    
 *			     ;;;;;;;;;;;;;;;     
 *			    ;;;;;;;;;;;;;;;;;     
 *				:::::::::::::::::    
 * 				:::::::::::::::::      
 *  			:::::::::::::::::    
 *   			::::::@@@@@::::::    
 *				:::::@:::::@:::::    
 *				::::@:::::::@::::    
 * 				:::::::::::::::::    
 *  			:::::::::::::::::      
 */



package de.bo.aid.boese.model;

import java.util.HashSet;
import java.util.Set;

// TODO: Auto-generated Javadoc
/**
 * Service Model for Hibernate generated by hbm2java.
 */
public class Service implements java.io.Serializable {

	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The Service id. */
	private int seId;
	
	/** The description. */
	private String description;
	
	/** The Devices which offer this Service. */
	private Set<Device> devices = new HashSet<Device>(0);

	/**
	 * Instantiates a new service.
	 */
	public Service() {
		
	}

	/**
	 * Instantiates a new service for DB-Insert.
	 *
	 * @param description the description
	 */
	public Service(String description) {
		this.description = description;
	}

	/**
	 * Instantiates a new service with all parameters.
	 *
	 * @param seId the Service id
	 * @param description the description
	 */
	public Service(int seId, String description) {
		this.seId = seId;
		this.description = description;
	}

	/**
	 * Instantiates a new service with all parameters and foreign keys.
	 *
	 * @param seId the Service id
	 * @param description the description
	 * @param devices the devices
	 */
	public Service(int seId, String description, Set<Device> devices) {
		this.seId = seId;
		this.description = description;
		this.devices = devices;
	}

	/**
	 * Gets the Service id.
	 *
	 * @return the Service id
	 */
	public int getSeId() {
		return this.seId;
	}

	/**
	 * Sets the Service id.
	 *
	 * @param seId the new Service id
	 */
	public void setSeId(int seId) {
		this.seId = seId;
	}

	/**
	 * Gets the description.
	 *
	 * @return the description
	 */
	public String getDescription() {
		return this.description;
	}

	/**
	 * Sets the description.
	 *
	 * @param description the new description
	 */
	public void setDescription(String description) {
		this.description = description;
	}

	/**
	 * Gets the devices which offer this Service.
	 *
	 * @return the devices which offer this Service
	 */
	public Set<Device> getDevices() {
		return this.devices;
	}

	/**
	 * Sets the devices which offer this Service.
	 *
	 * @param devices the new devices which offer this Service
	 */
	public void setDevices(Set<Device> devices) {
		this.devices = devices;
	}

	/**
	 *  
	 * To compare two Services.
	 *
	 * @param obj the Service object to compare
	 * @return true if both Services are equal
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Service other = (Service) obj;
		if (description == null) {
			if (other.description != null)
				return false;
		} else if (!description.equals(other.description))
			return false;
		if (devices == null) {
			if (other.devices != null)
				return false;
		} else if (!devices.equals(other.devices))
			return false;
		if (seId != other.seId)
			return false;
		return true;
	}

}
