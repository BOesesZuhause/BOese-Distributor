/*             
 * 			  (                       
 *			 ( )\         (        (   
 *			 )((_)  (    ))\ (    ))\  
 *			((_)_   )\  /((_))\  /((_) 
 *			 | _ ) ((_)(_)) ((_)(_))   
 *			 | _ \/ _ \/ -_)(_-</ -_)  
 *			 |___/\___/\___|/__/\___|
 *       
 *           			;            
 *		      +        ;;;         + 
 *			  +       ;;;;;        + 
 *			  +      ;;;;;;;       + 
 *			  ++    ;;;;;;;;;     ++ 
 *			  +++++;;;;;;;;;;;+++++  
 *			   ++++;;;;;;;;;;;+++++  
 *				++;;;;;;;;;;;;;++    
 *			     ;;;;;;;;;;;;;;;     
 *			    ;;;;;;;;;;;;;;;;;     
 *				:::::::::::::::::    
 * 				:::::::::::::::::      
 *  			:::::::::::::::::    
 *   			::::::@@@@@::::::    
 *				:::::@:::::@:::::    
 *				::::@:::::::@::::    
 * 				:::::::::::::::::    
 *  			:::::::::::::::::      
 */



package de.bo.aid.boese.model;

/**
 * DeviceGroup Model for Hibernate generated by hbm2java.
 */
public class DeviceGroup implements java.io.Serializable {

	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** The DeviceGroup id. */
	private DeviceGroupId id;
	
	/** The linked device. */
	private Device device;
	
	/** The linked group. */
	private Group group;
	
	/** The rights of the Group on this Device. */
	private short rights;

	/**
	 * Instantiates a new device group.
	 */
	public DeviceGroup() {
		
	}

	/**
	 * Instantiates a new device group for DB Insert.
	 *
	 * @param rights the rights of the Group on this Device
	 */
	public DeviceGroup(short rights) {
		this.rights = rights;
	}

	/**
	 * Instantiates a new device group.
	 *
	 * @param id the id
	 * @param device the device
	 * @param group the group
	 * @param rights the rights of the Group on this Device
	 */
	public DeviceGroup(DeviceGroupId id, Device device, Group group, short rights) {
		this.id = id;
		this.device = device;
		this.group = group;
		this.rights = rights;
	}

	/**
	 * Gets the id.
	 *
	 * @return the id
	 */
	public DeviceGroupId getId() {
		return this.id;
	}

	/**
	 * Sets the id.
	 *
	 * @param id the new id
	 */
	public void setId(DeviceGroupId id) {
		this.id = id;
	}

	/**
	 * Gets the device.
	 *
	 * @return the device
	 */
	public Device getDevice() {
		return this.device;
	}

	/**
	 * Sets the device.
	 *
	 * @param device the new device
	 */
	public void setDevice(Device device) {
		this.device = device;
	}

	/**
	 * Gets the group.
	 *
	 * @return the group
	 */
	public Group getGroup() {
		return this.group;
	}

	/**
	 * Sets the group.
	 *
	 * @param group the new group
	 */
	public void setGroup(Group group) {
		this.group = group;
	}

	/**
	 * Gets the rights of the Group on this Device.
	 *
	 * @return the rights of the Group on this Device
	 */
	public short getRights() {
		return this.rights;
	}

	/**
	 * Sets the rights of the Group on this Device.
	 *
	 * @param rights the new rights of the Group on this Device
	 */
	public void setRights(short rights) {
		this.rights = rights;
	}

	/** 
	 * To compare two DeviceGroupIds
	 * 
	 * @param obj the DeviceGroupId object to compare
	 * @return true if both DeviceGroupIds are equal
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		DeviceGroup other = (DeviceGroup) obj;
		if (device == null) {
			if (other.device != null)
				return false;
		} else if (!device.equals(other.device))
			return false;
		if (group == null) {
			if (other.group != null)
				return false;
		} else if (!group.equals(other.group))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (rights != other.rights)
			return false;
		return true;
	}

}
