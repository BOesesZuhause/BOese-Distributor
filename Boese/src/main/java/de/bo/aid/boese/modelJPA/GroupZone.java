/*             
 * 			  (                       
 *			 ( )\         (        (   
 *			 )((_)  (    ))\ (    ))\  
 *			((_)_   )\  /((_))\  /((_) 
 *			 | _ ) ((_)(_)) ((_)(_))   
 *			 | _ \/ _ \/ -_)(_-</ -_)  
 *			 |___/\___/\___|/__/\___|
 *       
 *           			;            
 *		      +        ;;;         + 
 *			  +       ;;;;;        + 
 *			  +      ;;;;;;;       + 
 *			  ++    ;;;;;;;;;     ++ 
 *			  +++++;;;;;;;;;;;+++++  
 *			   ++++;;;;;;;;;;;+++++  
 *				++;;;;;;;;;;;;;++    
 *			     ;;;;;;;;;;;;;;;     
 *			    ;;;;;;;;;;;;;;;;;     
 *				:::::::::::::::::    
 * 				:::::::::::::::::      
 *  			:::::::::::::::::    
 *   			::::::@@@@@::::::    
 *				:::::@:::::@:::::    
 *				::::@:::::::@::::    
 * 				:::::::::::::::::    
 *  			:::::::::::::::::      
 */


package de.bo.aid.boese.modelJPA;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

// TODO: Auto-generated Javadoc
/**
 * GroupZone Model for Hibernate generated by hbm2java.
 */
@Entity
@Table(name="\"GroupZone\"")
public class GroupZone implements java.io.Serializable {

	/** The Constant serialVersionUID. */
	@Transient
	private static final long serialVersionUID = 1L;

	/** The GroupZoneId. */
	@Id
	@GeneratedValue(strategy=GenerationType.TABLE)
	private int id;
	
	/** The linked Group. */
	@ManyToOne(cascade = {CascadeType.ALL}, fetch = FetchType.LAZY)
	@JoinColumn(name = "grp", nullable = false)
	private Group grp;
	
	/** The linked Zone. */
	@ManyToOne(cascade = {CascadeType.ALL}, fetch = FetchType.LAZY)
	@JoinColumn(name = "zone", nullable = false)
	private Zone zone;
	
	/** The rights in of the Group in this Zone. */
	private Short rights;

	/**
	 * Instantiates a new group zone.
	 */
	public GroupZone() {
	}

	/**
	 * Instantiates a new group zone.
	 *
	 * @param id the id
	 * @param grp the group
	 * @param zone the zone
	 */
	public GroupZone(int id, Group grp, Zone zone) {
		this.id = id;
		this.grp = grp;
		this.zone = zone;
	}

	/**
	 * Instantiates a new group zone for DB insert.
	 *
	 * @param grp the group
	 * @param zone the zone
	 * @param rights the rights
	 */
	public GroupZone(Group grp, Zone zone, Short rights) {
		this.grp = grp;
		this.zone = zone;
		this.rights = rights;
	}

	/**
	 * Instantiates a new group zone.
	 *
	 * @param id the id
	 * @param grp the group
	 * @param zone the zone
	 * @param rights the rights
	 */
	public GroupZone(int id, Group grp, Zone zone, Short rights) {
		this.id = id;
		this.grp = grp;
		this.zone = zone;
		this.rights = rights;
	}

	/**
	 * Gets the id.
	 *
	 * @return the id
	 */
	public int getId() {
		return this.id;
	}

	/**
	 * Sets the id.
	 *
	 * @param id the new id
	 */
	public void setId(int id) {
		this.id = id;
	}

	/**
	 * Gets the group.
	 *
	 * @return the group
	 */
	public Group getGrp() {
		return this.grp;
	}

	/**
	 * Sets the group.
	 *
	 * @param grp the new group
	 */
	public void setGrp(Group grp) {
		this.grp = grp;
	}

	/**
	 * Gets the zone.
	 *
	 * @return the zone
	 */
	public Zone getZone() {
		return this.zone;
	}

	/**
	 * Sets the zone.
	 *
	 * @param zone the new zone
	 */
	public void setZone(Zone zone) {
		this.zone = zone;
	}

	/**
	 * Gets the rights.
	 *
	 * @return the rights
	 */
	public Short getRights() {
		return this.rights;
	}

	/**
	 * Sets the rights.
	 *
	 * @param rights the new rights
	 */
	public void setRights(Short rights) {
		this.rights = rights;
	}

	/**
	 *  
	 * To compare two GroupZones.
	 *
	 * @param obj the GroupZone object to compare
	 * @return true if both GroupZones are equal
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		GroupZone other = (GroupZone) obj;
		if (grp == null) {
			if (other.grp != null)
				return false;
		} else if (!grp.equals(other.grp))
			return false;
		if (id != other.id) {
			return false;
		}
		if (rights == null) {
			if (other.rights != null)
				return false;
		} else if (!rights.equals(other.rights))
			return false;
		if (zone == null) {
			if (other.zone != null)
				return false;
		} else if (!zone.equals(other.zone))
			return false;
		return true;
	}
}