/*             
 * 			  (                       
 *			 ( )\         (        (   
 *			 )((_)  (    ))\ (    ))\  
 *			((_)_   )\  /((_))\  /((_) 
 *			 | _ ) ((_)(_)) ((_)(_))   
 *			 | _ \/ _ \/ -_)(_-</ -_)  
 *			 |___/\___/\___|/__/\___|
 *       
 *           			;            
 *		      +        ;;;         + 
 *			  +       ;;;;;        + 
 *			  +      ;;;;;;;       + 
 *			  ++    ;;;;;;;;;     ++ 
 *			  +++++;;;;;;;;;;;+++++  
 *			   ++++;;;;;;;;;;;+++++  
 *				++;;;;;;;;;;;;;++    
 *			     ;;;;;;;;;;;;;;;     
 *			    ;;;;;;;;;;;;;;;;;     
 *				:::::::::::::::::    
 * 				:::::::::::::::::      
 *  			:::::::::::::::::    
 *   			::::::@@@@@::::::    
 *				:::::@:::::@:::::    
 *				::::@:::::::@::::    
 * 				:::::::::::::::::    
 *  			:::::::::::::::::      
 */


package de.bo.aid.boese.modelJPA;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;


// TODO: Auto-generated Javadoc
/**
 * Rule Model for Hibernate generated by hbm2java.
 */
@Entity
@Table(name="\"Rule\"")
public class Rule implements java.io.Serializable, JPAModel {

	/** The Constant serialVersionUID. */
	@Transient
	private static final long serialVersionUID = 1L;

	/** The Rule id. */
	@Id
	@GeneratedValue(strategy=GenerationType.TABLE)
	private int ruId;
	
	/** is this Rule active. */
	private Boolean active;
	
	/** The insert date. */
	private Date insertDate;
	
	/** The modify date. */
	private Date modifyDate;
	
	/** The permissions. */
	@Column(columnDefinition = "text")
	private String permissions;
	
	/** The conditions. */
	@Column(columnDefinition = "text")
	private String conditions;
	
	/** The actions. */
	@Column(columnDefinition = "text")
	private String actions;
	
	/** The Logs of this Rule. */
	@OneToMany(cascade = {CascadeType.ALL}, fetch = FetchType.LAZY, mappedBy = "rule")
	private Set<LogRule> logRules = new HashSet<LogRule>(0);
	
	/** The history Logs of this Rule. */ 
	@OneToMany(cascade = {CascadeType.ALL}, fetch = FetchType.LAZY, mappedBy = "rule")
	private Set<HistoryLogRule> historyLogRules = new HashSet<HistoryLogRule>(0);
	
	/** The RepeatRules belonging to this Rule. */ 
	@OneToMany(cascade = {CascadeType.ALL}, fetch = FetchType.LAZY, mappedBy = "rule")
	private Set<RepeatRule> repeatRule = new HashSet<RepeatRule>(0);
	
	/** The DeviceComponents belonging to this Rule. */ 
	@OneToMany(cascade = {CascadeType.ALL}, fetch = FetchType.LAZY, mappedBy = "rule")
	private Set<DeviceComponentRule> deviceComponentRules = new HashSet<DeviceComponentRule>(0);

	/**
	 * Instantiates a new rule.
	 */
	public Rule() {
	}

	/**
	 * Instantiates a new rule with ID.
	 *
	 * @param ruId the Rule id
	 */
	public Rule(int ruId) {
		this.ruId = ruId;
	}

	/**
	 * Instantiates a new rule for DB insert with active = true.
	 *
	 * @param permissions the permissions
	 * @param conditions the conditions
	 * @param actions the actions
	 */
	public Rule(String permissions, String conditions, String actions) {
		this.permissions = permissions;
		this.conditions = conditions;
		this.actions = actions;
		this.active = true;
		this.insertDate = new Date();
		this.modifyDate = new Date();
	}

	/**
	 * Instantiates a new rule for DB insert with active.
	 *
	 * @param permissions the permissions
	 * @param conditions the conditions
	 * @param actions the actions
	 * @param active the active
	 */
	public Rule(String permissions, String conditions, String actions, boolean active) {
		this.permissions = permissions;
		this.conditions = conditions;
		this.actions = actions;
		this.active = active;
		this.insertDate = new Date();
		this.modifyDate = new Date();
	}

	/**
	 * Instantiates a new rule with all parameter and foreign keys.
	 *
	 * @param ruId the Rule id
	 * @param active the active
	 * @param insertDate the insert date
	 * @param modifyDate the modify date
	 * @param permissions the permissions
	 * @param conditions the conditions
	 * @param actions the actions
	 * @param logRules the log rules
	 * @param historyLogRules the history log rules
	 * @param repeatRule the Repeat Rule
	 * @param deviceComponentRules the deviceComponentRules
	 */
	public Rule(int ruId, Boolean active, Date insertDate, Date modifyDate, String permissions,
			String conditions, String actions, Set<LogRule> logRules, Set<HistoryLogRule> historyLogRules, Set<RepeatRule> repeatRule, Set<DeviceComponentRule> deviceComponentRules) {
		this.ruId = ruId;
		this.active = active;
		this.insertDate = insertDate;
		this.modifyDate = modifyDate;
		this.permissions = permissions;
		this.conditions = conditions;
		this.actions = actions;
		this.logRules = logRules;
		this.historyLogRules = historyLogRules;
		this.repeatRule = repeatRule;
		this.deviceComponentRules = deviceComponentRules;
	}

	/**
	 * Gets the Rule id.
	 *
	 * @return the Rule id
	 */
	public int getRuId() {
		return this.ruId;
	}

	/**
	 * Sets the Rule id.
	 *
	 * @param ruId the new Rule id
	 */
	public void setRuId(int ruId) {
		this.ruId = ruId;
	}

	/**
	 * Gets the active.
	 *
	 * @return the active
	 */
	public Boolean getActive() {
		return this.active;
	}

	/**
	 * Sets the active.
	 *
	 * @param active the new active
	 */
	public void setActive(Boolean active) {
		this.active = active;
	}

	/**
	 * Gets the insert date.
	 *
	 * @return the insert date
	 */
	public Date getInsertDate() {
		return this.insertDate;
	}

	/**
	 * Sets the insert date.
	 *
	 * @param insertDate the new insert date
	 */
	public void setInsertDate(Date insertDate) {
		this.insertDate = insertDate;
	}

	/**
	 * Gets the modify date.
	 *
	 * @return the modify date
	 */
	public Date getModifyDate() {
		return this.modifyDate;
	}

	/**
	 * Sets the modify date.
	 *
	 * @param modifyDate the new modify date
	 */
	public void setModifyDate(Date modifyDate) {
		this.modifyDate = modifyDate;
	}

	/**
	 * Gets the permissions.
	 *
	 * @return the permissions
	 */
	public String getPermissions() {
		return this.permissions;
	}

	/**
	 * Sets the permissions.
	 *
	 * @param permissions the new permissions
	 */
	public void setPermissions(String permissions) {
		this.permissions = permissions;
	}

	/**
	 * Gets the conditions.
	 *
	 * @return the conditions
	 */
	public String getConditions() {
		return this.conditions;
	}

	/**
	 * Sets the conditions.
	 *
	 * @param conditions the new conditions
	 */
	public void setConditions(String conditions) {
		this.conditions = conditions;
	}

	/**
	 * Gets the actions.
	 *
	 * @return the actions
	 */
	public String getActions() {
		return this.actions;
	}

	/**
	 * Sets the actions.
	 *
	 * @param actions the new actions
	 */
	public void setActions(String actions) {
		this.actions = actions;
	}

	/**
	 * Gets the Logs of this Rule.
	 *
	 * @return the Logs of this Rule
	 */
	public Set<LogRule> getLogRules() {
		return this.logRules;
	}

	/**
	 * Sets the Logs of this Rule.
	 *
	 * @param logRules the new Logs of this Rule
	 */
	public void setLogRules(Set<LogRule> logRules) {
		this.logRules = logRules;
	}

	/**
	 * Gets the history Logs of this Rule.
	 *
	 * @return the history Logs of this Rule
	 */
	public Set<HistoryLogRule> getHistoryLogRules() {
		return this.historyLogRules;
	}

	/**
	 * Sets the history Logs of this Rule.
	 *
	 * @param historyLogRules the new history Logs of this Rule
	 */
	public void setHistoryLogRules(Set<HistoryLogRule> historyLogRules) {
		this.historyLogRules = historyLogRules;
	}

	/**
	 * Gets the belonging to this Rule.
	 *
	 * @return the belonging to this Rule
	 */
	public Set<RepeatRule> getRepeatRule() {
		return repeatRule;
	}

	/**
	 * Sets the belonging to this Rule.
	 *
	 * @param repeatRule belonging to this Rule
	 */
	public void setRepeatRule(Set<RepeatRule> repeatRule) {
		this.repeatRule = repeatRule;
	}

	/**
	 *  
	 * To compare two Rules.
	 *
	 * @param obj the Rule object to compare
	 * @return true if both Rules are equal
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Rule other = (Rule) obj;
		if (ruId != other.ruId)
			return false;
		return true;
	}

	/**
	 *  
	 * To compare two Rules.
	 *
	 * @param obj the Rule object to compare
	 * @return true if both Rules are equal
	 */
	public boolean equalsWithoutIDAndFK(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Rule other = (Rule) obj;
		if (actions == null) {
			if (other.actions != null)
				return false;
		} else if (!actions.equals(other.actions))
			return false;
		if (active == null) {
			if (other.active != null)
				return false;
		} else if (!active.equals(other.active))
			return false;
		if (conditions == null) {
			if (other.conditions != null)
				return false;
		} else if (!conditions.equals(other.conditions))
			return false;
		if (insertDate == null) {
			if (other.insertDate != null)
				return false;
		} else if (!insertDate.equals(other.insertDate))
			return false;
		if (modifyDate == null) {
			if (other.modifyDate != null)
				return false;
		} else if (!modifyDate.equals(other.modifyDate))
			return false;
		if (permissions == null) {
			if (other.permissions != null)
				return false;
		} else if (!permissions.equals(other.permissions))
			return false;
		return true;
	}

	public Set<DeviceComponentRule> getDeviceComponentRules() {
		return deviceComponentRules;
	}

	public void setDeviceComponentRules(Set<DeviceComponentRule> deviceComponentRules) {
		this.deviceComponentRules = deviceComponentRules;
	}

}
